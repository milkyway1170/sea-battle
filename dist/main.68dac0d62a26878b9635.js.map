{"version":3,"file":"main.68dac0d62a26878b9635.js","mappings":"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","sources":["webpack:///./src/constants/routes.ts","webpack:///./src/types/enums.ts","webpack:///./src/components/page/HomePage/styles.ts","webpack:///./src/components/page/HomePage/index.tsx","webpack:///./src/components/atoms/GlobalStyle/index.tsx","webpack:///./src/components/atoms/FieldCell/styles.ts","webpack:///./src/components/atoms/FieldCell/index.tsx","webpack:///./src/components/atoms/Field/styles.ts","webpack:///./src/components/atoms/Field/index.tsx","webpack:///./src/components/page/GamePage/styles.ts","webpack:///./src/constants/colors.ts","webpack:///./src/components/atoms/Header/styles.ts","webpack:///./src/components/atoms/Header/index.tsx","webpack:///./src/components/atoms/Footer/styles.ts","webpack:///./src/components/atoms/Footer/index.tsx","webpack:///./src/constants/mock-data.ts","webpack:///./src/models/first-player/index.ts","webpack:///./src/components/page/GamePage/index.tsx","webpack:///./src/components/page/LocationPage/styles.ts","webpack:///./src/components/molecules/SpacingOfShip/indes.tsx","webpack:///./src/components/atoms/Main/styles.ts","webpack:///./src/components/atoms/Main/index.tsx","webpack:///./src/models/player-names/index.ts","webpack:///./src/components/page/LocationPage/index.tsx","webpack:///./src/components/page/NamingPage/styles.ts","webpack:///./src/components/atoms/FormField/styles.ts","webpack:///./src/components/atoms/FormField/index.tsx","webpack:///./src/components/page/NamingPage/index.tsx","webpack:///./src/hooks/useFormFieldsControl.ts","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"sourcesContent":["const Routes = {\n  HomePage: '/',\n  GamePage: '/game',\n  LocationPage: '/location',\n  NamingPage: '/naming',\n};\n\nexport default Routes;\n","export enum CellStatusEnum {\n  Empty = 'Empty',\n  AliveShip = 'Alive ship',\n  SlainShip = 'Slain ship',\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  height: 100vh;\n  :before {\n    z-index: -1;\n    position: absolute;\n    left: 0;\n    top: 0;\n    content: url('/images/shot1.jpg');\n    opacity: 0.4;\n  }\n`;\n","import Routes from '@/constants/routes';\nimport { Button, Typography } from '@mui/material';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container } from './styles';\n\nexport const HomePage = () => {\n  const navigate = useNavigate();\n\n  const handleClick = (): void => navigate(Routes.NamingPage);\n\n  return (\n    <Container>\n      <Typography variant=\"h3\">Добро пожаловать в игру Морской бой!</Typography>\n      <Button onClick={handleClick} variant=\"contained\">\n        Начать игру\n      </Button>\n    </Container>\n  );\n};\n","import { css, GlobalStyles } from '@mui/material';\r\nimport React, { FC } from 'react';\r\n\r\nconst globalStyle = css`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  body {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const GlobalStyle: FC = () => {\r\n  return <GlobalStyles styles={globalStyle} />;\r\n};\r\n","import { CellStatusEnum } from '@/types/enums';\nimport styled from '@emotion/styled';\n\nimport { TableCell as MuiTableCell } from '@mui/material';\n\nexport const TableCell = styled.td<{ status: CellStatusEnum }>`\n  width: 2rem;\n  height: 2rem;\n  border: 1px solid black;\n  background-color: ${(props) => {\n    if (props.status === CellStatusEnum.AliveShip) return 'green';\n    if (props.status === CellStatusEnum.SlainShip) return 'red';\n    if (props.status === CellStatusEnum.Empty) return 'white';\n  }};\n`;\n","import { CellStatusEnum } from '@/types/enums';\nimport React, { useState } from 'react';\nimport { TableCell } from './styles';\n\nexport interface FieldCellProps {\n  cellStatus: CellStatusEnum;\n}\n\nexport const FieldCell = ({ cellStatus }: FieldCellProps) => {\n  const [status, setStatus] = useState<CellStatusEnum>(cellStatus);\n\n  const handleClick = () => setStatus(CellStatusEnum.SlainShip);\n\n  return <TableCell status={status} onClick={handleClick} />;\n};\n","import styled from '@emotion/styled';\n\nexport const Table = styled.table`\n  /* display: flex; */\n  width: max-content;\n  /* justify-content: center;\n  align-items: center;\n  flex-direction: column; */\n  text-align: center;\n  border-collapse: collapse;\n`;\n","import { FieldCell } from '@/components/atoms/FieldCell';\n\nimport { Box, Typography } from '@mui/material';\nimport { useStore } from 'effector-react';\nimport React from 'react';\n\nimport { Table } from './styles';\nimport { Store } from 'effector';\nimport { CellStatusEnum } from '@/types/enums';\n\nexport interface FieldProps {\n  $store: Store<CellStatusEnum[][]>;\n}\n\nexport const Field = ({ $store }: FieldProps) => {\n  const playerField = useStore($store);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '25rem',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Table>\n          {playerField.map((feildRow) => (\n            <tr>\n              {feildRow.map((item) => (\n                <FieldCell cellStatus={item} />\n              ))}\n            </tr>\n          ))}\n        </Table>\n      </Box>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n`;\n","export const Colors = {\n  Selago: '#ebf2fc',\n  Denim: '#1976D2',\n  White: '#ffffff',\n};\n","import { Colors } from '@/constants/colors';\nimport styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\n\nexport const Container = styled.header`\n  width: 100%;\n  height: 4rem;\n  background: ${Colors.Denim};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Title = styled(Typography)`\n  color: ${Colors.White};\n`;\n","import React from 'react';\nimport { Container, Title } from './styles';\n\nexport const Header = () => {\n  return (\n    <Container>\n      <Title variant=\"h4\">Морской бой</Title>\n    </Container>\n  );\n};\n","import { Colors } from '@/constants/colors';\nimport styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\n\nexport const Container = styled.footer`\n  width: 100%;\n  height: 4rem;\n  background: ${Colors.Denim};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\nexport const Footer = () => {\n  return <Container />;\n};\n","import { CellStatusEnum } from '@/types/enums';\n\nexport const FIELDS = [\n  [\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n  ],\n  [\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n  ],\n  [\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n  ],\n  [\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n  ],\n  [\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n  ],\n  [\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n    CellStatusEnum.Empty,\n  ],\n];\n","import { FIELDS } from '@/constants/mock-data';\nimport { CellStatusEnum } from '@/types/enums';\nimport { createStore } from 'effector';\n\nexport const $firstPlayer = createStore<CellStatusEnum[][]>(FIELDS);\n","import React from 'react';\nimport { Field } from '@/components/atoms/Field';\nimport { Container } from './styles';\nimport { Header } from '@/components/atoms/Header';\nimport { Footer } from '@/components/atoms/Footer';\nimport { $firstPlayer } from '@/models/first-player';\n\nexport const GamePage = () => {\n  return (\n    <Container>\n      <Header />\n      GAME\n      <Field $store={$firstPlayer} />\n      <Footer />\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n`;\n","import { Field } from '@/components/atoms/Field';\nimport React from 'react';\nimport { $firstPlayer } from '@/models/first-player';\nimport { $secondPlayer } from '@/models/second-player';\n\nexport interface SpacingOfShipProps {\n  player: string;\n}\n\nexport const SpacingOfShip = ({ player }: SpacingOfShipProps) => {\n  return (\n    <>\n      <Field $store={$firstPlayer} />\n    </>\n  );\n};\n","import { Colors } from '@/constants/colors';\nimport styled from '@emotion/styled';\n\nexport const Container = styled.main`\n  width: 100%;\n  height: 100%;\n  margin: 2rem;\n  background: ${Colors.White};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  gap: 2rem;\n`;\n","import React, { PropsWithChildren } from 'react';\nimport { Container } from './styles';\n\nexport const Main = ({ children }: PropsWithChildren) => {\n  return <Container>{children}</Container>;\n};\n","import { IPlayerNames } from '@/types/types';\nimport { createStore } from 'effector';\n\nexport const $playerNames = createStore<IPlayerNames>({\n  firstPlayer: 'firstPlayer',\n  secondPlayer: 'secondPlayer',\n});\n","import React, { useState } from 'react';\nimport { Container } from './styles';\nimport { Header } from '@/components/atoms/Header';\nimport { Footer } from '@/components/atoms/Footer';\nimport { SpacingOfShip } from '@/components/molecules/SpacingOfShip/indes';\nimport { Button, Typography } from '@mui/material';\nimport { Main } from '@/components/atoms/Main';\nimport { $playerNames } from '@/models/player-names';\nimport { useStore } from 'effector-react';\nimport { useNavigate } from 'react-router-dom';\nimport Routes from '@/constants/routes';\n\nexport const LocationPage = () => {\n  const navigate = useNavigate();\n\n  const { firstPlayer, secondPlayer } = useStore($playerNames);\n  const [player, setPlayer] = useState(firstPlayer);\n  const [showTools, setShowTools] = useState(false);\n\n  const handleShowTools = (): void => {\n    setShowTools(!showTools);\n  };\n\n  const handleSwitchPlayer = (): void => {\n    setShowTools(!showTools);\n    if (player == firstPlayer) setPlayer(secondPlayer);\n    else {\n      navigate(Routes.GamePage);\n    }\n  };\n\n  return (\n    <Container>\n      <Header />\n      <Main>\n        {showTools ? (\n          <>\n            <SpacingOfShip player={player} />\n            <Button onClick={handleSwitchPlayer} variant=\"contained\">\n              Готово\n            </Button>\n          </>\n        ) : (\n          <>\n            <Typography variant=\"h5\">\n              Игроку {player} необходимо расставить свои корабли. Второму игроку\n              следует не подсматривать.\n            </Typography>\n            <Button onClick={handleShowTools} variant=\"contained\">\n              Приступить\n            </Button>\n          </>\n        )}\n      </Main>\n      <Footer />\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 2rem 0 0;\n  gap: 1rem;\n`;\n","import { styled, TextField } from '@mui/material'\n\nexport const FormTextField = styled(TextField)(({ theme }) => ({\n  minWidth: '25rem',\n\n  '& .MuiInputBase-input': {\n    fontSize: '1.4rem',\n    padding: '1.2rem 1.4rem',\n    color: 'inherit'\n  },\n  '& .MuiFormLabel-root': {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n    padding: '0 0.2rem',\n    fontSize: '1.4rem',\n    lineHeight: '1.5rem'\n  },\n  '& .Mui-disabled': {\n    WebkitTextFillColor: theme.palette.grey[600]\n  },\n  '& .MuiFormHelperText-root': {\n    fontSize: '0.9rem',\n    margin: '0.3rem 0.5rem 0 0.5rem'\n  }\n}))\n","import { ReactElement } from 'react'\nimport { IconButton, InputAdornment } from '@mui/material'\nimport { Controller, FieldValues } from 'react-hook-form'\nimport { FormTextField } from './styles'\nimport { IFormFieldProps } from './types'\n\nexport default function FormField<T extends FieldValues>({\n  name,\n  error,\n  helperText,\n  label,\n  placeholder,\n  control,\n  onIconClick,\n  icon,\n  type = 'text',\n  defaultValue,\n  required = true,\n  multiline = false,\n  maxRows,\n  minRows,\n  rows,\n  step,\n  sx\n}: IFormFieldProps<T>): ReactElement {\n  return (\n    <Controller\n      control={control}\n      defaultValue={defaultValue}\n      name={name}\n      render={({ field }) => (\n        <FormTextField\n          error={error}\n          helperText={helperText}\n          id={name}\n          InputProps={{\n            endAdornment: icon ? (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={onIconClick}>{icon}</IconButton>\n              </InputAdornment>\n            ) : null,\n            inputProps: { step }\n          }}\n          label={label}\n          maxRows={maxRows}\n          minRows={minRows}\n          multiline={multiline}\n          placeholder={placeholder}\n          required={required}\n          rows={rows}\n          sx={sx}\n          type={type}\n          value={String(field.value || '')}\n          fullWidth\n          onChange={e => field.onChange(e)}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react';\nimport { Container, Form } from './styles';\nimport { Header } from '@/components/atoms/Header';\nimport { Footer } from '@/components/atoms/Footer';\nimport { SpacingOfShip } from '@/components/molecules/SpacingOfShip/indes';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { Main } from '@/components/atoms/Main';\nimport { $playerNames } from '@/models/player-names';\nimport { useStore } from 'effector-react';\nimport { useNavigate } from 'react-router-dom';\nimport Routes from '@/constants/routes';\nimport { Controller } from 'react-hook-form';\nimport FormField from '@/components/atoms/FormField';\nimport useFormFieldsControl from '@/hooks/useFormFieldsControl';\n\nexport interface INamingPageForm {\n  firstPlayer: string;\n  secondPlayer: string;\n}\n\nexport const NamingPage = () => {\n  const navigate = useNavigate();\n  const { handleSubmit, controlFields } = useFormFieldsControl<INamingPageForm>(\n    ['firstPlayer', 'secondPlayer'],\n  );\n\n  //   const { firstPlayer, secondPlayer } = useStore($playerNames);\n  //   const [player, setPlayer] = useState(firstPlayer);\n  //   const [showTools, setShowTools] = useState(false);\n\n  const handleOpenNextPage = (): void => {\n    navigate(Routes.LocationPage);\n  };\n\n  return (\n    <Container>\n      <Header />\n      <Main>\n        <Typography variant=\"h5\">\n          Прежде чем начать игру, стоит указать имена каждого из игроков:\n        </Typography>\n        <Form onSubmit={handleSubmit(handleOpenNextPage)}>\n          <FormField\n            defaultValue={''}\n            label=\"Первый игрок\"\n            name=\"firstPlayer\"\n            {...controlFields.firstPlayer}\n          />\n          <FormField\n            defaultValue={''}\n            label=\"Второй игрок\"\n            name=\"secondPlayer\"\n            {...controlFields.secondPlayer}\n          />\n        </Form>\n      </Main>\n      <Footer />\n    </Container>\n  );\n};\n","import { Control, FieldValues, Resolver, useForm, UseFormHandleSubmit, useFormState } from 'react-hook-form'\n\ntype IFormFieldsControlResponse<T extends FieldValues> =\n  | Record<\n      keyof T,\n      {\n        control: Control<T, unknown>\n        error: boolean\n        helperText: string\n      }\n    >\n  | Record<string, never>\n\ninterface IFormControlRespose<T extends FieldValues> {\n  handleSubmit: UseFormHandleSubmit<T>\n  controlFields: IFormFieldsControlResponse<T>\n}\n\nexport default function useFormFieldsControl<T extends FieldValues>(\n  fields: Array<keyof T>,\n  validationSchema?: { resolver: Resolver<T, unknown> }\n): IFormControlRespose<T> {\n  const { handleSubmit, control } = useForm<T>(validationSchema)\n  const { errors } = useFormState({\n    control\n  })\n\n  const controlFields = fields.reduce((acum, current) => {\n    return {\n      ...acum,\n      [current]: {\n        control,\n        error: Boolean(errors?.[current]?.message),\n        helperText: String(errors?.[current]?.message)\n      }\n    }\n  }, {})\n\n  return { handleSubmit, controlFields }\n}\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/page/HomePage';\nimport { GlobalStyle } from './components/atoms/GlobalStyle';\nimport RoutesList from './constants/routes';\nimport { GamePage } from './components/page/GamePage';\nimport { LocationPage } from './components/page/LocationPage';\nimport { NamingPage } from './components/page/NamingPage';\n\nexport const App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Routes>\n        <Route path={RoutesList.HomePage} element={<HomePage />} />\n        <Route path={RoutesList.LocationPage} element={<LocationPage />} />\n        <Route path={RoutesList.GamePage} element={<GamePage />} />\n        <Route path={RoutesList.NamingPage} element={<NamingPage />} />\n      </Routes>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"names":["CellStatusEnum","Container","styled","HomePage","navigate","useNavigate","Typography","variant","Button","onClick","Routes","globalStyle","css","GlobalStyle","GlobalStyles","styles","TableCell","props","status","AliveShip","SlainShip","Empty","FieldCell","cellStatus","useState","setStatus","Table","Field","$store","playerField","useStore","Box","sx","display","flexDirection","alignItems","justifyContent","gap","map","feildRow","item","Colors","Title","Header","Footer","FIELDS","$firstPlayer","createStore","GamePage","SpacingOfShip","player","Main","children","$playerNames","firstPlayer","secondPlayer","LocationPage","setPlayer","showTools","setShowTools","Form","FormTextField","TextField","theme","minWidth","fontSize","padding","color","backgroundColor","palette","common","white","black","lineHeight","WebkitTextFillColor","grey","margin","FormField","name","error","helperText","label","placeholder","control","onIconClick","icon","type","defaultValue","required","multiline","maxRows","minRows","rows","step","render","field","id","InputProps","endAdornment","InputAdornment","position","IconButton","inputProps","value","String","fullWidth","onChange","e","NamingPage","fields","validationSchema","useForm","useFormFieldsControl","handleSubmit","errors","useFormState","controlFields","reduce","acum","current","Boolean","message","onSubmit","App","path","RoutesList","element","ReactDOM","document","getElementById"],"sourceRoot":""}